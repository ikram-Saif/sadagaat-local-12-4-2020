{"version":3,"sources":["components/Login/Forgot_Password.js"],"names":["ForgotPassword","handleFormErrorMessage","e","message","t","props","target","value","setCustomValidity","handleChange","setState","name","handleSubmit","preventDefault","forgotPassword","state","then","response","styleClass","iconClass","loading","setTimeout","catch","err","loginLink","email","this","id","className","style","margin","role","onSubmit","for","type","data-error","onChange","required","pattern","title","onInvalid","onInput","class","Component","withTranslation"],"mappings":"2NAQMA,E,keAEJ,aAAe,IAAD,8BACZ,gBAUJC,uBAAwB,SAACC,GAAkB,IAAhBC,EAAe,uDAAL,GAC5BC,EAAK,EAAKC,MAAVD,EAEgB,KAAnBF,EAAEI,OAAOC,MAEbL,EAAEI,OAAOE,kBAAkBJ,EAAE,oBAE7BF,EAAEI,OAAOE,kBAAkBL,IAlBb,EAwBbM,aAAe,SAACP,GACf,EAAKQ,SAAL,eAAgBR,EAAEI,OAAOK,KAAOT,EAAEI,OAAOC,SAzB7B,EA8BbK,aAAe,SAACV,GACfA,EAAEW,iBAEDC,YAAe,EAAKC,OACnBC,MAAK,SAAAC,GAAa,EAAKP,SAAS,CAChBP,QAAQ,8CACRe,WAAW,cACXC,UAAU,oBACVC,SAAQ,IAEPC,YAAW,WACV,EAAKX,SAAS,CAAEU,SAAS,MACxB,QAGnBE,OAAM,SAAAC,GAEE,IAAIpB,EADJ,EAAKO,SAAS,CAACU,SAAQ,IAGrBjB,EADkB,wCAAhBoB,EAAIpB,QACI,kBACe,kBAAhBoB,EAAIpB,QACH,gBAEA,uCACZkB,YAAW,WACT,EAAKX,SAAS,CAAEU,SAAS,EACTjB,QAASA,EACTgB,UAAU,qBACVD,WAAW,YACXM,UAAU,YAEzB,SA3Db,EAAKT,MAAQ,CACCU,MAAM,GACNtB,QAAQ,GACRe,WAAW,GACXC,UAAU,GACVC,SAAQ,GAPV,E,qDA2EJ,IAAD,OAEAhB,EAAKsB,KAAKrB,MAAVD,EACDgB,EAAWM,KAAKX,MAAMK,QAE5B,OAEI,yBAAKO,GAAG,UAAUC,UAAU,YAEtB,yBAAKA,UAAU,gBAEf,kBAAC,IAAD,CAAQjB,KAAMP,EAAE,oBAEd,iCACE,yBAAKwB,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,4BAEb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,+BAA+BD,GAAG,aAK/C,wBAAIC,UAAU,uBAAd,IAAsCxB,EAAE,mBACxC,uBAAGwB,UAAaF,KAAKX,MAAMG,YACvB,uBAAGU,UAAaF,KAAKX,MAAMI,UAAWU,MAAS,CAACC,OAAO,SAClD1B,EAAEsB,KAAKX,MAAMZ,UAGtB,0BAAOwB,GAAK,OAEJI,KAAK,OAAOpB,KAAK,aACjBiB,UAAU,WACVI,SAAWN,KAAKd,cAGtB,yBAAKgB,UAAU,OACb,yBAAKA,UAAU,wBACb,2BAAOK,IAAI,cAAc7B,EAAE,kBAE3B,2BACEuB,GAAG,aACHhB,KAAK,QACLiB,UAAU,eACTM,KAAK,OACLC,aAAY/B,EAAE,iCACbgC,SAAYV,KAAKjB,aACjB4B,SAAW,OACXC,QAAU,mEACVC,MAASnC,EAAE,iCACXoC,UAAa,SAACtC,GAAD,OAAK,EAAKD,uBAAuBC,EAAEE,EAAE,mCAClDqC,QAAS,SAASvC,GACVA,EAAEI,OAAOE,kBAAkBJ,EAAE,QAIvC,yBAAKsC,MAAM,6BAGjB,yBAAKd,UAAU,oBAEb,4BAAQM,KAAK,SAASN,UAAU,mDAAmDxB,EAAE,QAChFgB,GACS,uBACEQ,UAAU,wBACVC,MAAO,CAAEC,OAAQ,wB,GA/IpCa,aA4KdC,wBAAkB5C","file":"static/js/24.47d47eb5.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport Header from '../sub_page_header';\r\nimport { Link } from 'react-router-dom';\r\nimport { forgotPassword , resetPassword} from '../../repository'\r\nimport  {withTranslation}  from 'react-i18next'\r\n\r\n\r\n\r\nclass ForgotPassword extends Component{\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n                  email:\"\",\r\n                  message:'',\r\n                  styleClass:'',\r\n                  iconClass:'',\r\n                  loading:false\r\n                }\r\n    \r\n}\r\nhandleFormErrorMessage =(e,message = '')=>{\r\n  const {t} = this.props\r\n\r\n  if (e.target.value === '')\r\n  \r\n  e.target.setCustomValidity(t('fill this field'))\r\n  else\r\n  e.target.setCustomValidity(message)\r\n    \r\n  }\r\n   \r\n \r\n   \r\n   handleChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n\r\n   \r\n   handleSubmit = (e) => {\r\n    e.preventDefault();\r\n \r\n     forgotPassword(this.state)\r\n     .then(response => {this.setState({\r\n                      message:'Please Check your Email to Complete Process',\r\n                      styleClass:'success-msg',\r\n                      iconClass:'fa fa-check fa-2x',\r\n                      loading:true\r\n                       })\r\n                       setTimeout(() => {\r\n                        this.setState({ loading: false });\r\n                      }, 2000)\r\n                       \r\n                      })\r\n     .catch(err => {\r\n              this.setState({loading:true})\r\n              let message;\r\n              if (err.message === 'Request failed with status code 404')\r\n                message = 'email not found'\r\n                else if (err.message === 'Network Error')\r\n                message = 'Network Error'\r\n                else \r\n                message = 'something went wrong try again later'\r\n              setTimeout(() => {\r\n                this.setState({ loading: false,\r\n                                message: message,\r\n                                iconClass:'fa fa-times-circle',\r\n                                styleClass:'error-msg',\r\n                                loginLink:'Login' \r\n                              })\r\n              }, 2000)\r\n                 \r\n                }\r\n              );\r\n   // window.location = '/reset_password'\r\n          \r\n\r\n    \r\n     \r\n\r\n   }\r\n   \r\n  \r\n \r\n   render(){\r\n\r\n    const {t} = this.props\r\n    const loading  = this.state.loading \r\n\r\n    return(\r\n\r\n        <div id=\"wrapper\" className=\"clearfix\">\r\n\r\n              <div className=\"main-content\">\r\n\r\n              <Header name={t('Login/Register')}/>\r\n\r\n                <section>\r\n                  <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-8 col-md-offset-2\">\r\n                      \r\n                        <div className=\"tab-content\">\r\n                          <div className=\"tab-pane fade in active p-15\" id=\"login-tab\">\r\n                            \r\n\r\n                          \r\n\r\n                            <h4 className=\"text-gray mt-0 pt-5\"> {t('Reset Password')}</h4>\r\n                            <p className = {this.state.styleClass}>\r\n                                <i className = {this.state.iconClass} style = {{margin:'5px'}}></i>\r\n                                    {t(this.state.message)}\r\n                              </p>\r\n\r\n                            <form  id = 'form'\r\n                                    //data-toggle=\"validator\"\r\n                                    role=\"form\" name=\"login-form\" \r\n                                    className=\"clearfix\" \r\n                                    onSubmit ={this.handleSubmit}\r\n                                    >\r\n\r\n                              <div className=\"row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                  <label for=\"inputEmail\">{t('Email Address')}</label>\r\n\r\n                                  <input \r\n                                    id=\"inputEmail\" \r\n                                    name=\"email\" \r\n                                    className=\"form-control\"\r\n                                     type=\"text\"\r\n                                     data-error={t(\"this email address is invalid\")}\r\n                                      onChange = {this.handleChange} \r\n                                      required = 'true'\r\n                                      pattern = '^([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-z]{2,8})(\\.[a-z]{2,8})?$'\r\n                                      title = {t(\"that email address is invalid\")} \r\n                                      onInvalid = {(e)=>this.handleFormErrorMessage(e,t(\"that email address is invalid\"))}\r\n                                      onInput={function(e) {\r\n                                              e.target.setCustomValidity(t(''))}\r\n                                            }\r\n                                      />\r\n\r\n                                    <div class=\"help-block with-errors\"></div>\r\n                                </div>\r\n                               </div>\r\n                              <div className=\"form-group mt-10\">\r\n                                \r\n                                <button type=\"submit\" className=\"btn btn-block text-white btn-theme-green btn-lg\">{t('send')}\r\n                                    {loading && (\r\n                                              <i\r\n                                                className=\"fa fa-spinner fa-spin\"\r\n                                                style={{ margin: \"5px\" }}\r\n                                              />\r\n                                          )}\r\n                                </button>\r\n                                \r\n                              </div>\r\n                            \r\n                            </form>\r\n                          </div>\r\n                         \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n              </div>\r\n              </div>\r\n              \r\n              \r\n\r\n\r\n                  \r\n                    \r\n                    \r\n\r\n    )\r\n   }\r\n}\r\n\r\nexport default withTranslation()(ForgotPassword);"],"sourceRoot":""}