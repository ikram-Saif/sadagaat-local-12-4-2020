{"version":3,"sources":["components/projects/single-withSlider.js"],"names":["SinglProject2","state","project","render","id","this","props","match","params","project_id","axios","get","address","headers","i18n","language","data","setState","console","log","setTimeout","bind","renderContainer","t","project_images","images","imageUrl","push","name","projectProgressAlign","dir","Fragment","className","length","slidesPerScroll","autoPlay","rtl","arrowLeft","style","margin","arrowRight","addArrowClickHandler","infinite","clickToChange","centered","breakpoints","1000","slidesPerPage","500","animationSpeed","map","image","maxHeight","src","alt","width","height","class","locationName","parse","description","textAlign","data-percent","Precision","projectProgress","donationProgress","getNumberWithComma","raised","goal","to","display","Component","withTranslation"],"mappings":"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","file":"static/js/30.49c94bc5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport address from \"../utils/address\";\r\nimport axios from \"axios\";\r\nimport i18n from \"i18next\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Carousel from \"@brainhubeu/react-carousel\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport {Link} from 'react-router-dom'\r\nimport {getNumberWithComma , Precision} from '../events/getMonthName'\r\nimport parse  from 'html-react-parser';\r\n\r\n/**\r\n * This Component display project information like (carousal of images , name , discription ...)\r\n * @component\r\n * @see http://sadagaat-uk.org/single-projects/1944\r\n */\r\n\r\nclass SinglProject2 extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      project: [],\r\n      render: false,\r\n    };\r\n  }\r\n/**\r\n * return project from API\r\n */\r\n  async componentDidMount (){\r\n    // get projct id from url \r\n     let id = this.props.match.params.project_id;\r\n\r\n\r\n    try {\r\n      const { data: project } = await axios.get(`${address()}projects/${id}`, {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      });\r\n      this.setState({ project });\r\n    } catch (error) {\r\n      console.log(\"can not load project for the home page slider\");\r\n    }\r\n    setTimeout(function() { \r\n        this.setState({render: true}) }.bind(this), 10)\r\n  }\r\n\r\n/**\r\n * returned project when recive prpos like language 'ar' , 'en'\r\n */\r\n  async componentWillReceiveProps(){\r\n    let id = this.props.match.params.project_id;\r\n\r\n\r\n    try {\r\n      const { data: project } = await axios.get(`${address()}projects/${id}`, {\r\n        headers: { \"accept-language\": `${i18n.language}` },\r\n      });\r\n      this.setState({ project });\r\n    } catch (error) {\r\n      console.log(\"can not load project for the home page slider\");\r\n    }\r\n  }\r\n\r\n \r\n  render() {\r\n\r\n        let renderContainer = false\r\n        if(this.state.render) {\r\n                const { t } = this.props;\r\n                const { project } = this.state;\r\n\r\n                const project_images = project.images\r\n                //push default project image to array of images \r\n                if (project.imageUrl !== null){\r\n                  project_images.push({\r\n                    id : project.id,\r\n                    name : project.id\r\n                  })\r\n                 }\r\n               //const projectHasImages = project_images.length > 0? true : false\r\n               const projectProgressAlign = i18n.dir()==='rtl'?'right':'left'\r\n\r\n               \r\n\r\n\r\n      renderContainer = \r\n      <React.Fragment>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className = 'section-content'>\r\n          <div className=\"col-xs-12 col-sm-6 col-md-12\">\r\n              <h2 >\r\n\r\n              </h2>\r\n\r\n              <div className=\"event media sm-maxwidth400 border-bottom mt-5 mb-0 pt-10 pb-15\">\r\n                <div className=\"row\">\r\n                   \r\n                      <div className=\"causes\">\r\n                        <div className=\"row-fluid\">\r\n                          <div className=\"col-md-6\">\r\n                            {/* check if peoject image array has more than defualte image */}\r\n                          {project_images.length > 1? ( <Carousel \r\n                    \r\n                    slidesPerScroll={1}\r\n                    autoPlay={6000}\r\n                    rtl\r\n                    arrowLeft={\r\n                      <i\r\n                        className=\"fa fa-chevron-right fa-2x\"\r\n                        style={{ margin:\"10px\" }}\r\n                      />\r\n                    }\r\n                    arrowRight={\r\n                      <i\r\n                        className=\"fa fa-chevron-left fa-2x\"\r\n                        style={{ margin: \"10px\" }}\r\n                      />\r\n                    }\r\n                    addArrowClickHandler\r\n                    // animationSpeed={1000}\r\n                    infinite\r\n                    clickToChange\r\n                    centered\r\n                    breakpoints={{\r\n                      1000: {\r\n                        // these props will be applied when screen width is less than 1000px\r\n                        slidesPerPage: 2,\r\n                        clickToChange: false,\r\n                        centered: false,\r\n    \r\n                        infinite: false,\r\n                      },\r\n                      500: {\r\n                        slidesPerPage: 1,\r\n                        slidesPerScroll: 1,\r\n                        clickToChange: false,\r\n                        centered: false,\r\n                        animationSpeed: 2000,\r\n                        infinite: false,\r\n                      },\r\n                    }} >\r\n                                                  \r\n                      {project_images.map((image) =>(\r\n                          <div className =\"post-thumb thumb\" style = {{maxHeight: '400px'}}>\r\n                          <img\r\n                            src={`${address()}projects/${image.name}/image`}\r\n                            alt=\"project image\"\r\n                            width='500'\r\n                            className= 'img-responsive'\r\n                            style = {{height:'400px'}}\r\n                          />\r\n                          </div>\r\n\r\n                      ))}\r\n                      \r\n                       </Carousel>\r\n                       \r\n                    ):(<div className =\"post-thumb thumb\" style = {{maxHeight: '400px'}}>\r\n                    <img\r\n                      src={`${address()}projects/${project.id}/image`}\r\n                      alt=\"project image\"\r\n                      width='500'\r\n                      className= 'img-responsive'\r\n                      style = {{height:'500px'}}\r\n                    />\r\n                    </div>\r\n                    )}\r\n                     \r\n                          </div>\r\n                          <div class=\"causes-details col-md-6\">\r\n                                \r\n                                <h2 class=\"line-bottom mt-0\">{project.name}</h2>\r\n                                <h5 class=\"font-weight-600 text-gray-dimgray\">\r\n                                 \r\n                                  <i className= \"fa fa-map-marker m-5\"></i>\r\n\r\n                                  <span className = \"\">{project.locationName}</span></h5>\r\n                                    <div className = \"mb-5\">\r\n                                   {parse(project.description)}\r\n                                        \r\n                                   </div>\r\n\r\n                                   <div className=\"progress-item mt-0\">\r\n                                <p className = \"text-theme-colored font-weight-700\" style = {{textAlign:projectProgressAlign}}>{t('Project Progress')}</p>\r\n                                <div className=\"progress\">\r\n                                  <div data-percent={Precision(project.projectProgress)} className=\"progress-bar\">  \r\n                                  <span className=\"percent\">\r\n                                      {Precision(project.projectProgress)}%\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                                    <div className=\"progress-item mt-2\">\r\n                                    <div className=\"progress mb-0\">\r\n                                    <div\r\n                                      data-percent={Precision(project.donationProgress)}\r\n                                      className=\"progress-bar\">\r\n                                        <span className=\"percent\">\r\n                                            {Precision(project.donationProgress)}%\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                             \r\n                                <div class=\"mt-10 mb-20\">\r\n                                  <ul class=\"list-inline clearfix mt-10\">\r\n                                    <li class=\"pull-left flip pr-0\"> {t(\"Raised\")} <span class=\"font-weight-700 font-\">\r\n                                      { getNumberWithComma(project.raised)}</span></li>\r\n                                    <li class=\"text-theme-colored pull-right flip pr-0\">{t(\"Goals\")}\r\n                                     <span class=\"font-weight-700\">\r\n                                       { getNumberWithComma(project.goal)}\r\n                                       </span>\r\n                                    </li>\r\n                                  </ul>\r\n                                </div>\r\n\r\n                              \r\n\r\n                                <Link to= {'/projects/'+project.id} \r\n                                class=\"btn btn-theme-colored btn-sm\"\r\n                                style = {{display:`\r\n                                ${project.donationProgress >= 100 ?'none':''}`\r\n                              }}>\r\n                                  {t('Donate Now')}\r\n                                </Link>\r\n                              </div>\r\n           \r\n                        </div>\r\n                      </div>\r\n              \r\n                </div>\r\n           \r\n              </div>\r\n            </div>\r\n\r\n                 \r\n        \r\n            \r\n          </div>\r\n        \r\n        </div>\r\n      </div>\r\n      </React.Fragment>\r\n                 \r\n                  }\r\n                   return (\r\n\r\n                  renderContainer \r\n    )\r\n  }\r\n}\r\nexport default withTranslation()(SinglProject2);\r\n"],"sourceRoot":""}