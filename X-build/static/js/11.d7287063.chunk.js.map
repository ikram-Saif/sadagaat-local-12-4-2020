{"version":3,"sources":["../../react_components/index.js","../../react_components/PaginationBoxView.js","../../react_components/PageView.js","../../react_components/BreakView.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/projects/index.js","components/projects/projects.js"],"names":["PaginationBoxView","evt","selected","pageCount","selectedItem","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","breakLinkClassName","index","leftSide","rightSide","page","breakView","createPageView","key","onClick","initialSelected","props","this","initialPage","disableInitialCallback","extraAriaContext","console","prevProps","forcePage","forwardJump","backwardJump","pageIndex","hrefBuilder","state","ariaLabelBuilder","label","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","handlePageSelected","bind","href","ariaLabel","disabledClassName","previousClassName","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","className","tabIndex","role","onKeyPress","aria-disabled","Component","propTypes","PropTypes","onPageChange","func","defaultProps","PageView","ariaCurrent","aria-label","aria-current","isRequired","BreakView","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Projects","useState","data","setData","offset","setOffset","setCurrentPage","postsPerPage","loading","setLoading","t","useTranslation","projectType","type","projectProgressAlign","i18n","dir","a","window","fetch","address","headers","language","fetcher","json","response","filterProjects","allProjects","fixedProjects","mergedProjects","filter","project","id","push","log","projectProgress","useEffect","fetchData","currentPosts","slice","length","map","to","style","height","src","width","getNumber","raised","goal","data-percent","Precision","donationProgress","textAlign","name","parse","description","display","position","bottom","Math","ceil","e","subContainerClassName","Projects_","Fragment","coverImage"],"mappings":"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","file":"static/js/11.d7287063.chunk.js","sourcesContent":["import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousClassName: 'previous',\n    nextClassName: 'next',\n    previousLabel: 'Previous',\n    nextLabel: 'Next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = selectedItem => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = index => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = props => {\n  let pageClassName = props.pageClassName;\n  let pageLinkClassName = props.pageLinkClassName;\n\n  const onClick = props.onClick;\n  const href = props.href;\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      props.page +\n      (props.extraAriaContext ? ' ' + props.extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (props.selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + props.page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + props.activeClassName;\n    } else {\n      pageClassName = props.activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof props.activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = props.activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        onClick={onClick}\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={onClick}\n      >\n        {props.page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = props => {\n  const { breakLabel, breakClassName, breakLinkClassName, onClick } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        onClick={onClick}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={onClick}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from \"react\";\r\nimport address from \"../utils/address\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport i18n from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Precision, getNumber } from \"../events/getMonthName\";\r\nimport parse from \"html-react-parser\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Preload from \"../preload\";\r\n\r\n/**\r\n * this componnet display projects  and filter projects acourding to recived props\r\n * @param {string} props type of project 'completed , ongoing' , planed\r\n * @component\r\n * @see http://sadagaat-uk.org/projects\r\n */\r\nconst Projects = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(6);\r\n  const [loading, setLoading] = useState(true);\r\n  const { t } = useTranslation();\r\n  //@example projectType = 'onging'\r\n  const projectType = props.type;\r\n  const projectProgressAlign = i18n.dir() === \"rtl\" ? \"right\" : \"left\";\r\n\r\n  /**\r\n   * git all project from API\r\n   */\r\n  async function fetchData() {\r\n    const fetcher = await window.fetch(`${address()}projects`, {\r\n      headers: { \"accept-language\": `${i18n.language}` },\r\n    });\r\n    const response = await fetcher.json();\r\n    const project = filterProjects(projectType, response);\r\n    setLoading(false);\r\n  }\r\n  /**\r\n   * This function check the filter of Projects matching with type\r\n   * @param {string} type  type of project 'completed' ,'ongoing' , 'planned'\r\n   * @param {Array} allProjects  array of all projects\r\n   */\r\n  function filterProjects(type, allProjects) {\r\n    let Projects = [];\r\n    let fixedProjects = [];\r\n    let mergedProjects = [];\r\n    fixedProjects = filterdProject(allProjects);\r\n    mergedProjects.push(...fixedProjects);\r\n    mergedProjects.push(...allProjects);\r\n\r\n    if (type === \"ongoing\") {\r\n      console.log(fixedProjects);\r\n      Projects = mergedProjects.filter(\r\n        (project) =>\r\n          project.projectProgress > 0 && project.projectProgress < 100\r\n      );\r\n      console.log(Projects);\r\n    }\r\n    if (type === \"completed\")\r\n      Projects = allProjects.filter(\r\n        (project) => project.projectProgress === 100\r\n      );\r\n    if (type === \"planned\")\r\n      Projects = allProjects.filter((project) => project.projectProgress === 0);\r\n    // fill data with filterd projects\r\n    setData(Projects);\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [props]);\r\n\r\n  // Get current posts\r\n  const currentPosts = data.slice(offset, offset + postsPerPage);\r\n\r\n  // Change page\r\n  const paginate = (e) => {\r\n    setCurrentPage(e.selected);\r\n    setOffset(e.selected * postsPerPage);\r\n  };\r\n\r\n  function filterdProject(allprojects) {\r\n    const filterdProject = allprojects.filter(\r\n      (project) =>\r\n        (project.id === 2694) |\r\n        (project.id === 2722) |\r\n        (project.id === 2387) |\r\n        (project.id === 2733)\r\n    );\r\n    return filterdProject;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {loading && <Preload loading={loading} />}\r\n\r\n          {currentPosts.length > 0\r\n            ? currentPosts.map((project) => (\r\n                <div className=\"col-md-4\" key={project.id}>\r\n                  <Link to={\"/single-projects/\" + project.id}>\r\n                    <div\r\n                      className=\"causes bg-white mb-30 border-bottom\"\r\n                      style={{ height: \"600px\" }}\r\n                    >\r\n                      <div className=\"thumb\">\r\n                        <img\r\n                          src={`${address()}projects/${project.id}/image`}\r\n                          className=\"img-fullwidth\"\r\n                          width=\"390\"\r\n                          height=\"260\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"causes-details clearfix p-15 pt-15 pb-15\">\r\n                        <ul className=\"list-inline font-16 font-weight-600 clearfix mb-5\">\r\n                          <li className=\"pull-left font-weight-400 text-black-333 pr-0\">\r\n                            {t(\"Raised\")}\r\n                            <span className=\"text-theme-colored font-weight-700\">\r\n                              {/* pass raise to getNumber function to   */}\r\n                              {getNumber(project.raised)}\r\n                            </span>\r\n                          </li>\r\n                          <li className=\"pull-right font-weight-400 text-black-333 pr-0\">\r\n                            {t(\"Goal\")}\r\n                            <span className=\"text-theme-colored font-weight-700\">\r\n                              {getNumber(project.goal)}\r\n                            </span>\r\n                          </li>\r\n                        </ul>\r\n\r\n                        <div className=\"progress-item mt-0\">\r\n                          {/* <span>{t('Donation Progress')}</span> */}\r\n                          <div className=\"progress\">\r\n                            <div\r\n                              data-percent={Precision(project.donationProgress)}\r\n                              className=\"progress-bar\"\r\n                            >\r\n                              <span className=\"percent\">\r\n                                {Precision(project.donationProgress)}%\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"progress-item mt-0\">\r\n                          <p\r\n                            className=\"\"\r\n                            style={{ textAlign: projectProgressAlign }}\r\n                          >\r\n                            {t(\"Project Progress\")}\r\n                          </p>\r\n                          <div className=\"progress\">\r\n                            <div\r\n                              data-percent={Precision(project.projectProgress)}\r\n                              className=\"progress-bar\"\r\n                            >\r\n                              <span className=\"percent\">\r\n                                {Precision(project.projectProgress)}%\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <h4 className=\"text-uppercase\">{project.name}</h4>\r\n\r\n                        <p className=\"mt-20 project-discription\">\r\n                          {parse(project.description)}\r\n                        </p>\r\n\r\n                        <Link\r\n                          to={\"/projects/\" + project.id}\r\n                          className=\"btn btn-default btn-theme-colored btn-xs font-16 mt-10\"\r\n                          style={{\r\n                            display: `${\r\n                              project.donationProgress >= 100 ? \"none\" : \"\"\r\n                            }`,\r\n                          }}\r\n                        >\r\n                          {t(\"Donate\")}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              ))\r\n            : \"\"}\r\n          {data.length > postsPerPage && (\r\n            <div style={{ position: \"absolute\", bottom: \"0%\" }}>\r\n              <ReactPaginate\r\n                previousLabel={t(\"prev\")}\r\n                nextLabel={t(\"next\")}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={Math.ceil(data.length / postsPerPage)}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={paginate}\r\n                containerClassName={\"pagination\"}\r\n                subContainerClassName={\"pages pagination\"}\r\n                activeClassName={\"active\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport Header from '../sub_page_header';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Project from '.'\r\n\r\n\r\nconst Projects_=()=>{\r\n  \r\n   const {t} = useTranslation()\r\n  \r\nreturn(\r\n  <React.Fragment>\r\n    <section>\r\n      <Header name={t('Ongoing Projects')} coverImage = {'projects-bg-img'}/>\r\n      <Project type = {'ongoing'} />\r\n    </section>\r\n</React.Fragment>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default Projects_;"],"sourceRoot":""}