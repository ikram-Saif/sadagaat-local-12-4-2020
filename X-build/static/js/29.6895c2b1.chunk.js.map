{"version":3,"sources":["components/news/single-news.js"],"names":["SinglNews","fillMediaArray","news_images","state","news","images","news_videos","video","allMedia","imageUrl","push","type","id","name","length","map","image","setState","setTranslationData","newsData","newsTranslations","i","i18n","language","locale","translationNews","description","this","props","match","params","news_id","axios","get","address","data","console","log","t","coverImage","className","class","slidesPerScroll","rtl","arrowLeft","style","margin","arrowRight","addArrowClickHandler","infinite","clickToChange","centered","breakpoints","1000","slidesPerPage","500","animationSpeed","media","mxaHeight","src","alt","height","controls","playIcon","url","Component","withTranslation"],"mappings":"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","file":"static/js/29.6895c2b1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport address from \"../utils/address\";\r\nimport axios from \"axios\";\r\nimport i18n from \"i18next\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Header from \"../sub_page_header\";\r\nimport Carousel from \"@brainhubeu/react-carousel\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport ReactPlayer from 'react-player'\r\n\r\n\r\n/**\r\n * This component return Single News page with carousal of media\r\n * @see http://sadagaat-uk.org/news/2728\r\n * @component\r\n */\r\n\r\nclass SinglNews extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // all news \r\n      news: [],\r\n      // videos and Images\r\n      allMedia:[],\r\n      // translation \r\n      translationNews:{}\r\n    };\r\n  }\r\n\r\n/**\r\n * get the news from ApIs\r\n */\r\n  async componentDidMount() {\r\n    // get id of news from url\r\n    let id = this.props.match.params.news_id;\r\n\r\n    try {\r\n      const { data: news } = await axios.get(`${address()}news/${id}`);\r\n      this.setState({ \r\n              news \r\n            });\r\n            // join videos and images in one array\r\n            this.fillMediaArray();\r\n            // call translation new \r\n            this.setTranslationData()\r\n\r\n    } \r\n    catch (error) {\r\n      console.log(\"can not load news for the home page slider\");\r\n    }\r\n  //  console.log(this.state.news)\r\n  }\r\n\r\n\r\n  /**\r\n   * When component recive props Like Language props its re call setTranslation function \r\n   */\r\n  async componentWillReceiveProps() {\r\n\r\n    this.setTranslationData()\r\n\r\n  }\r\n\r\n     /**\r\n    * this function  join two video and image arrays in one array, and add new attribute type 'image'/'video'\r\n    */\r\nfillMediaArray =()=>{\r\n    const news_images = this.state.news.images\r\n    const news_videos = this.state.news.video\r\n    const allMedia = []\r\n\r\n    /**fill array with default Image if its not null */\r\n    if (this.state.news.imageUrl !== null)\r\n     {\r\n        allMedia.push({\r\n              type :'image',\r\n              id : this.state.news.id,\r\n              name : this.state.news.id\r\n        })\r\n     }\r\n\r\n    if(news_images.length > 0)\r\n    {\r\n      news_images.map((image) =>{\r\n\r\n        allMedia.push({\r\n          type :'image',\r\n          id : image.id,\r\n          name : image.name\r\n        })\r\n      \r\n      })\r\n    }\r\n    \r\n    if(news_videos.length > 0)\r\n    {\r\n    news_videos .map((video) =>{\r\n\r\n      allMedia.push({\r\n        type :'video',\r\n        id : video.id,\r\n        name : video.name\r\n      })\r\n    \r\n    })\r\n  }\r\n    this.setState({allMedia})\r\n\r\n   }\r\n/**\r\n * this function looping through translation array and return news when local attribute equals selected language en | ar\r\n * you can get user selected language call  i18n.language props\r\n * @return vois set translation news in the state\r\n */\r\n   setTranslationData=()=>{\r\n     // get newstranslation  array \r\n     const newsData = this.state.news.newsTranslations\r\n      // loping through array\r\n     for(let i = 0 ;i < newsData.length; i++){\r\n       // check user language with lacale\r\n       if(i18n.language === newsData[i].locale){\r\n         // fill the state with one translation news , news name and descriptions\r\n         this.setState({\r\n          translationNews:{\r\n              name:newsData[i].name,\r\n              description:newsData[i].description\r\n            }\r\n         })\r\n        // console.log('translationsDataname',this.state.translationNews)\r\n\r\n       }\r\n     }\r\n}\r\n\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    const { news } = this.state;\r\n    const allMedia = this.state.allMedia\r\n    const translationNews = this.state.translationNews\r\n    return (\r\n      <div>\r\n        <Header name={t(\"News\")}  coverImage = {'news-bg-img'}/>\r\n\r\n        <section>\r\n          <div className=\"container mt-30 mb-30 pt-30 pb-30\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"blog-posts single-post\">\r\n                  <article class=\"post clearfix mb-0\">\r\n                    <div class=\"entry-header\">\r\n                       {/**check if  all media has image other than default image */}\r\n                     {allMedia.length > 1? \r\n                     (<Carousel  \r\n                          slidesPerScroll={1}\r\n                          //autoPlay={6000}\r\n                          rtl\r\n                          arrowLeft={\r\n                            <i\r\n                              className=\"fa fa-chevron-right fa-2x\"\r\n                              style={{ margin:\"10px\" }}\r\n                            />\r\n                          }\r\n                          arrowRight={\r\n                            <i\r\n                              className=\"fa fa-chevron-left fa-2x\"\r\n                              style={{ margin: \"10px\" }}\r\n                            />\r\n                          }\r\n                          addArrowClickHandler\r\n                          // animationSpeed={1000}\r\n                          infinite\r\n                          clickToChange\r\n                          centered\r\n                          breakpoints={{\r\n                            1000: {\r\n                              // these props will be applied when screen width is less than 1000px\r\n                              slidesPerPage: 2,\r\n                              clickToChange: false,\r\n                              centered: false,\r\n          \r\n                              infinite: false,\r\n                            },\r\n                            500: {\r\n                              slidesPerPage: 1,\r\n                              slidesPerScroll: 1,\r\n                              clickToChange: false,\r\n                              centered: false,\r\n                              animationSpeed: 2000,\r\n                              infinite: false,\r\n                            },\r\n                          }} >\r\n\r\n                  {allMedia.map((media) =>(\r\n                    media.type === 'image'?(\r\n                            <div\r\n                              class=\"post-thumb thumb\"\r\n                              style={{ mxaHeight: \"500px\" }} >\r\n                              <img\r\n                                src={`${address()}news/${media.name}/image`}\r\n                                className=\"img-fullwidth img-responsive\"\r\n                                alt=\"\"\r\n                                style = {{height:'400px'}}\r\n                              />\r\n                            </div>\r\n                      ):\r\n                      (\r\n                        <div>\r\n                              \r\n                         {/* <video \r\n                              className=\"img-fullwidth img-responsive\"\r\n                              style = {{height:'400px'}}\r\n \r\n                              controls \r\n                              >\r\n                                  <source src= {media.name} type=\"video/mp4\"/>\r\n\r\n                        </video > */}\r\n                        <ReactPlayer \r\n                                      controls = {true}\r\n                                      playIcon\r\n                                      className=\"img-fullwidth img-responsive\"\r\n                                     // height='100%'\r\n                                     // width = '100%'\r\n                                      url = {`${address()}news/${media.name}/video`}\r\n                                       />\r\n                        </div>\r\n                      )\r\n                        ))\r\n                  }\r\n                        \r\n                            </Carousel>):\r\n                            (\r\n                               <div\r\n                                class=\"post-thumb thumb\"\r\n                                style={{ mxaHeight: \"500px\" }} >\r\n                                <img\r\n                                  src={`${address()}news/${news.id}/image`}\r\n                                  className=\"img-fullwidth img-responsive\"\r\n                                  alt=\"\"\r\n                                  style = {{height:'400px'}}\r\n                                />\r\n                              </div>\r\n                            )\r\n                      } \r\n                    \r\n\r\n                    </div>\r\n                    </article>\r\n                    </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n\r\n                    <div class=\"entry-content\">\r\n                      <div class=\"entry-meta media no-bg no-border mt-15\">\r\n                        <div class=\"media-body pl-15\">\r\n                          <div class=\"event-content pull-left flip\">\r\n                            <h2 class=\"line-bottom mt-0\">{translationNews.name}</h2>\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <p className=\"m-15 mt-0\">{translationNews.description}.</p>\r\n                   \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withTranslation()(SinglNews);\r\n"],"sourceRoot":""}