{"version":3,"sources":["components/Login/Reset_password.js"],"names":["ResetPassword","handleFormErrorMessage","e","message","t","props","target","value","setCustomValidity","handleChange","setState","name","handleConfirmPassword","state","password","confirmPassword","errorPassword","handleSubmit","preventDefault","styleClass","iconClass","resetPassword","then","token","success","loginLink","loading","setTimeout","catch","err","document","getElementById","reset","this","match","params","id","className","style","margin","to","pathname","referrer","onSubmit","for","type","minlength","onChange","pattern","onInvalid","onInput","required","data-match","data-match-error","class","Component","withTranslation"],"mappings":"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","file":"static/js/25.9af6ce37.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport Header from '../sub_page_header';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport {resetPassword} from '../../repository'\r\nimport  {withTranslation}  from 'react-i18next'\r\n\r\n\r\n\r\nclass ResetPassword extends Component{\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n              \r\n                  loading: false,\r\n                  password: \"\",\r\n                  token:'',\r\n                  message:'',\r\n                  confirmPassword:\"\",\r\n                  styleClass:'',\r\n                  iconClass:'',\r\n                  loginLink:'',\r\n                  errorPassword:false,\r\n                  success:false\r\n                }\r\n    \r\n}\r\n   \r\nasync componentDidMount (){\r\n  // get token from url\r\n   let token = this.props.match.params.token\r\n\r\n  this.setState({token})\r\n\r\n}\r\n// change custom message that return from browser \r\nhandleFormErrorMessage =(e,message = '')=>{\r\n  const {t} = this.props\r\n\r\n  if (e.target.value === '')\r\n  \r\n  e.target.setCustomValidity(t('fill this field'))\r\n  else\r\n  e.target.setCustomValidity(message)\r\n    \r\n  }\r\n   \r\n   handleChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    handleConfirmPassword = (e)=>{\r\n      const  confirm = e.target.value\r\n      const password = this.state.password\r\n      if( confirm === password){\r\n       this.setState({\r\n        \r\n            confirmPassword:'fa fa-check alert-success',\r\n            errorPassword:false\r\n\r\n       })\r\n      }\r\n    else{\r\n      this.setState({\r\n                 confirmPassword:'fa fa-times-circle alert-danger',\r\n                  errorPassword:true\r\n        \r\n      })\r\n     }\r\n      \r\n       \r\n    }\r\n\r\n   \r\n   handleSubmit = (e) => {\r\n    e.preventDefault();\r\n     let errorconfirm = this.state.errorPassword\r\n    if (!errorconfirm){\r\n    \r\n    resetPassword(this.state)\r\n    .then(token =>{\r\n        this.setState({\r\n          success : true,\r\n          message:'password reset successfully',\r\n          styleClass:'success-msg',\r\n          iconClass:'fa fa-check fa-2x',\r\n          loginLink:'Login',\r\n          loading: true\r\n          })\r\n          \r\n          setTimeout(() => {\r\n            this.setState({ loading: false });\r\n          }, 2000)\r\n     \r\n\r\n    }\r\n    )\r\n    .catch(err => \r\n          {\r\n\r\n            this.setState({loading:true})\r\n\r\n            let message;\r\n            \r\n            if(err.message === 'Request failed with status code 400')\r\n              message = 'This is an invalid password reset link'\r\n            else\r\n             if (err.message === 'Network Error')\r\n                message = 'Network Error'\r\n            else \r\n            message = 'something went wrong try again later'\r\n            setTimeout(() => {\r\n              this.setState({ loading: false,\r\n                message: message,\r\n                iconClass:'fa fa-times-circle',\r\n                styleClass:'error-msg',\r\n              \r\n               });\r\n            }, 2000)\r\n          }\r\n            )\r\n    }\r\n    else{\r\n      this.setState({\r\n        \r\n           message:'Pasword Not Matching',\r\n           styleClass:'error-msg',\r\n           iconClass:'fa fa-times-circle'\r\n          \r\n        })\r\n  \r\n    }\r\n  \r\n    document.getElementById('reset-form').reset()\r\n\r\n     \r\n\r\n   }\r\n   \r\n  \r\n \r\n   render(){\r\n    const {t} = this.props \r\n    const loading  = this.state.loading;\r\n\r\n  \r\n    return(\r\n\r\n        <div id=\"wrapper\" className=\"clearfix\">\r\n\r\n              <div className=\"main-content\">\r\n              \r\n              <Header name={t('Login/Register')}/>\r\n\r\n                <section>\r\n                  <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-8 col-md-offset-2\">\r\n                      \r\n                        <div className=\"tab-content\">\r\n                          <div className=\"tab-pane fade in active p-15\" id=\"login-tab\">\r\n                            <h4 className=\"text-gray mt-0 pt-5\"> {t('Reset Password')} </h4>\r\n\r\n                            <div className = {this.state.styleClass}>\r\n                              \r\n                                    <i className = {this.state.iconClass} style = {{margin:'5px'}}/>\r\n                                    {t(this.state.message)}\r\n                                    {this.state.success &&  \r\n                                    \r\n                                    <Redirect \r\n                                      to = {{\r\n                                          pathname: \"/login\",\r\n                                          state:{referrer: 'password reset successfully'}\r\n                                          }} />\r\n                                    }\r\n                                    </div>\r\n\r\n                               <form  \r\n                                    id = 'reset-form'\r\n                                    //role=\"form\" \r\n                                    name=\"login-form\" \r\n                                    className=\"clearfix\" \r\n                                    onSubmit ={this.handleSubmit}>\r\n\r\n                                  <div className=\"row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                    <label for=\"form_choose_password\"> {t('password')}</label>\r\n                                    \r\n                                  \r\n                                    <input\r\n                                      id=\"inputPassword\" \r\n                                      name=\"password\" \r\n                                      className=\"form-control\" \r\n                                      type=\"password\"\r\n                                      minlength=\"8\"\r\n                                      onChange = {this.handleChange}\r\n                                      pattern = '^(?!.* )(?=.*\\d)(?=.*[A-Z]).{8,20}$'\r\n                                      onInvalid = {(e)=>this.handleFormErrorMessage(e,t('your password should not contain whitespace ,contains at least one digit,contains at least one capital letter, at least 8 characters and at most 20 characters'))}\r\n                                      onInput={function(e) {\r\n                                      e.target.setCustomValidity(t(''))}}\r\n                                      required\r\n                                      \r\n                                      /> \r\n\r\n                                <div className=\"help-block with-errors\"></div>\r\n                                </div>\r\n                                <div className=\"form-group col-md-6  has-feedback\" >\r\n                                  <label>{t('Re-enter Password')}</label>\r\n                                  <i className = {this.state.confirmPassword}></i>\r\n\r\n\r\n                                  <input \r\n                                        id=\"confirmPassword\" \r\n                                        name=\"re_enter_password\"  \r\n                                        className=\"form-control\"  \r\n                                        type=\"password\" \r\n                                        minlength=\"8\"                                     \r\n                                        data-match=\"#inputPassword\" \r\n                                        data-match-error={t('Not Matching')} \r\n                                         required\r\n                                         onChange = {this.handleConfirmPassword}\r\n                                   />\r\n                                \r\n                                        \r\n\r\n                                        <div class=\"help-block with-errors\"></div>       \r\n                                        </div>\r\n                                        </div>\r\n\r\n                              <div className=\"clear pull-right text-center pt-10\">\r\n                              </div>\r\n                              <div className=\"form-group mt-10\">\r\n                                <button type=\"submit\" \r\n                                \r\n                                className=\"btn btn-block text-white btn-theme-green btn-lg\">\r\n                                      {loading && (\r\n                                          <i\r\n                                            className=\"fa fa-spinner fa-spin\"\r\n                                            style={{ margin: \"5px\" }}\r\n                                          />\r\n                                        )}\r\n                              \r\n                                  {t('Reset Password')}\r\n                                  </button>\r\n                              </div>\r\n                            \r\n                            </form>\r\n                          </div>\r\n                          <div className=\"tab-pane fade in p-15\" id=\"register-tab\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n              </div>\r\n              </div>\r\n              \r\n              \r\n\r\n\r\n                  \r\n                    \r\n                    \r\n\r\n    )\r\n   }\r\n}\r\n\r\nexport default withTranslation()(ResetPassword);"],"sourceRoot":""}